---
- name: Collecting facts ...
  ansible.builtin.set_fact:
    pki: "{{ generate_pki_defaults | combine(pki if pki is defined else {}, recursive=True) }}"
  tags:
    - encrypt
    - decrypt

- name: Determining out dir ...
  ansible.builtin.set_fact:
    out_dir: "{{ playbook_dir }}/out/{{ hostvars[inventory_hostname]['group_names'][0] }}"
  when: pki.out_dir is not defined
  tags:
    - encrypt
    - decrypt

- name: Retrieving out dir from pki config ...
  ansible.builtin.set_fact:
    out_dir: "{{ pki.out_dir }}"
  when: pki.out_dir is defined
  tags:
    - encrypt
    - decrypt

- name: Collecting facts ...
  ansible.builtin.set_fact:
    archive: "{{ out_dir | dirname }}/{{ out_dir | basename }}.tar.gz"
    encrypted_archive: "{{ out_dir | dirname }}/{{ out_dir | basename }}.tar.gz.enc"
  tags:
    - encrypt
    - decrypt

- name: Printing paths ...
  ansible.builtin.debug:
    msg: "{{ path }}"
  with_items:
    - "out_dir: {{ out_dir }}"
    - "archive: {{ archive }}"
    - "encrypted_archive: {{ encrypted_archive }}"
  loop_control:
    loop_var: path
  tags:
    - encrypt
    - decrypt

- name: Check if encrypted archive exists ...
  ansible.builtin.stat:
    path: "{{ encrypted_archive }}"
  register: encrypted_archive_stat

- name: Decrypting PKI ...
  ansible.builtin.include_tasks:
    file: decrypt.yml
  tags:
    - decrypt
  when: (run is not defined or run == "decrypt") and encrypted_archive_stat.stat.exists

- name: Encrypting PKI ...
  ansible.builtin.include_tasks:
    file: encrypt.yml
  tags:
    - encrypt
  when: run is not defined or run == "encrypt"
